{"mappings":"YAAA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAOC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACrCC,YAAW,WACLP,EACFK,EAAQ,uBAAwCG,OAAfV,EAAS,QAAYU,OAANT,EAAM,OAEpDO,EAAK,sBAAuCE,OAAfV,EAAS,QAAYU,OAANT,EAAM,M,GAErDA,E,KAMM,CACXU,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAAU,SAACC,GACpCA,EAAMC,iBAGiB,IAEAC,EAAnBF,EAAMG,cADRC,SAAYlB,EAAKgB,EAALhB,MAAOmB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAGvBC,EAAYC,OAAOtB,EAAMuB,OACvBC,EAAYF,OAAOH,EAAKI,OACxBE,EAAmBH,OAAOF,EAAOG,OAGvC,IAAKxB,SAAW,EAAGA,UAAY0B,EAAkB1B,UAAY,EAAGsB,GAAaG,EAC3E1B,EAAcC,SAAUsB,GACrBK,MAAK,SAACC,GACLC,QAAQC,IAAIF,E,IAEbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  \n  });\n\n};\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  // забираємо значення з форми\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  let initDelay = Number(delay.value);\n  const delayStep = Number(step.value);\n  const amountOfPromises = Number(amount.value);\n  \n  // генерувати проміси\n  for (position = 1; position <= amountOfPromises; position += 1, initDelay += delayStep) {\n    createPromise(position, initDelay)\n      .then((succes) => {\n        console.log(succes);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n});\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","concat","form","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","initDelay","Number","value","delayStep","amountOfPromises","then","succes","console","log","catch","error"],"version":3,"file":"03-promises.ab822df6.js.map"}