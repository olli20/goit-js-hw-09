{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECRX,IAAMgB,EAAO,CACTC,UAAWC,SAASC,cAAc,UAClCC,SAAUF,SAASC,cAAc,sBACjCE,QAASH,SAASC,cAAc,sBA2D9BG,EAAQ,IAAZ,W,sBApDIC,EACUC,G,IAAAC,EAAAD,EAAEC,O,aACVC,KAAKC,WAAa,KAClBD,KAAKE,WAAY,EACjBF,KAAKD,OAASA,EAEdC,KAAKG,M,iBAGTlB,IAAA,O,MAAA,WACI,IAAMmB,EAAOJ,KAAKK,kBAAkB,GACpCL,KAAKD,OAAOK,E,IAGhBnB,IAAA,Q,MAAA,W,WACI,IAAIe,KAAKE,UAAT,CAIA,IAAMI,EAAYC,KAAKC,MACvBR,KAAKE,WAAY,EAEjBF,KAAKC,WAAaQ,aAAY,WAC1B,IACMC,EADcH,KAAKC,MACOF,EAC1BF,EAAOO,EAAKN,kBAAkBK,GAEpCC,EAAKZ,OAAOK,E,GACb,IAZC,C,IAeRnB,IAAA,O,MAAA,WACI2B,cAAcZ,KAAKC,YACnBD,KAAKE,WAAY,EACjB,IAAME,EAAOJ,KAAKK,kBAAkB,GACpCL,KAAKD,OAAOK,E,IAGhBnB,IAAA,oB,MAAA,SAAkBmB,GAKd,MAAO,CAAES,MAJKb,KAAKc,IAAIC,KAAKC,MAAMZ,EAAS,MAAyB,OAIpDa,KAHHjB,KAAKc,IAAIC,KAAKC,MAAMZ,EAAS,KAAoB,MAGxCc,KAFTlB,KAAKc,IAAIC,KAAKC,MAAMZ,EAAS,IAAc,M,IAK5DnB,IAAA,M,MAAA,SAAId,GACA,OAAOgD,OAAOhD,GAAOiD,SAAS,EAAG,I,OAKvC,GAAY,CAAU,CACpBrB,OAzDoB,SAAAD,G,IAAGe,EAAKf,EAALe,MAAOI,EAAInB,EAAJmB,KAAMC,EAAIpB,EAAJoB,KACpC5B,EAAKC,UAAU8B,YAAc,GAAYC,OAATT,EAAM,KAAWS,OAARL,EAAK,KAAQK,OAALJ,E,IA2DrD5B,EAAKI,SAAS6B,iBAAiB,QAAS3B,EAAM4B,MAAMC,KAAK7B,IACzDN,EAAKK,QAAQ4B,iBAAiB,QAAS3B,EAAM8B,KAAKD,KAAK7B,G","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/lesson-clock.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","const refs = {\n    clockface: document.querySelector('.clock'),\n    startBtn: document.querySelector('button[data-start]'),\n    stopBtn: document.querySelector('button[data-stop]'),\n}\n\nconst updateClockFace = ({ hours, mins, secs }) => {\n    refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n};\n\nclass Timer {\n    constructor({ onTick }, ) {\n        this.intervalId = null;\n        this.isStarted = false;\n        this.onTick = onTick;\n\n        this.init();\n    }\n\n    init() {\n        const time = this.getTimeComponents(0);\n        this.onTick(time);\n    }\n    \n    start() {\n        if (this.isStarted) {\n            return;\n        };\n\n        const startTime = Date.now();\n        this.isStarted = true;\n\n        this.intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = currentTime - startTime;\n            const time = this.getTimeComponents(deltaTime);\n            \n            this.onTick(time);\n        }, 1000);\n    }\n\n    stop() {\n        clearInterval(this.intervalId);\n        this.isStarted = false;\n        const time = this.getTimeComponents(0);\n        this.onTick(time);\n    }\n\n    getTimeComponents(time) {\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n        return { hours, mins, secs };\n    }\n\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n\n};\n\nconst timer = new Timer({\n    onTick: updateClockFace,\n});\n\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\nrefs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\n \n"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$362ebb3846a9172f$var$refs","clockface","document","querySelector","startBtn","stopBtn","$362ebb3846a9172f$var$timer","Timer","param","onTick","this","intervalId","isStarted","init","time","getTimeComponents","startTime","Date","now","setInterval","deltaTime","_this","clearInterval","hours","pad","Math","floor","mins","secs","String","padStart","textContent","concat","addEventListener","start","bind","stop"],"version":3,"file":"lesson-clock.ecfc5d03.js.map"}